#!/usr/bin/env bash
#
# Configure cloud packages
set -o errexit

# Set verbose/quiet output based on env var configured in Packer template
[[ "${DEBUG}" = true ]] && redirect="/dev/stdout" || redirect="/dev/null"

# Only configure if installation was enabled in the Packer template
[ "$ENABLE_CLOUD_INIT" = true ] || exit 0

# Packer logging
echo "Configuring cloud packages for EC2..."

# Configuration files for cloud-init
cloud_conf="/etc/cloud/cloud.cfg"
cloud_override="/etc/cloud/cloud.cfg.d/01_debian_cloud.cfg"
cloud_datasrc="/etc/cloud/cloud.cfg.d/90_dpkg.cfg"

# By default the Debian cloud-init package disables collection of EC2
# metadata. Since the target cloud platform is Amazons EC2 we want to
# enable it. Note that we also require the cloud-guest-utils package that
# contains the ec2metadata script
echo "Enabling cloud-init collection of EC2 metadata" >${redirect}
sed -i "/disable-ec2-metadata/ d" /target/${cloud_conf}

# Since the target platform is Amazons EC2 we can speed up processing by
# only running the cloud-init code for the Amazon EC2 datasource
echo "Disabling all cloud-init datasources except EC2" >${redirect}
sed -i "/^datasource_list:/ s/\[.*\]/\[ Ec2 \]/g" /target/${cloud_datasrc}

# Implement the same overrides and defaults for cloud-init as configured in
# the official Debian cloud instances (plus some minor changes).
#
# Additionally, set the default system locale to one we are sure has been
# generated. Note that by default cloud-init sets the default locale to
# en_US.UTF-8 on first boot. Clearly this isn't particularly helpful if
# that locale hasn't been generated.
# Setting the system locale to our default or the first locale specfied in
# the Packer template ensures that there are no errors due to missing
# locales as we can be sure that the locale has been generated by another
# script during the build.
: ${LOCALES:="en_GB.UTF-8"}
def_locale=${LOCALES%% *} # Grabs all when single locale is defined (no match)
echo "Setting sensible defaults and system locale for cloud-init" >${redirect}
cat > /target/${cloud_override} <<EOF
apt_preserve_sources_list: true
locale: ${def_locale}
manage_etc_hosts: true
system_info:
  default_user:
    name: admin
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    lock_passwd: True
    gecos: Debian Administrator
    groups: [adm, audio, cdrom, dialout, dip, floppy, netdev, plugdev, sudo, video, systemd-journal]
    sudo: ["ALL=(ALL) NOPASSWD:ALL"]
    shell: /bin/bash
EOF

exit 0
